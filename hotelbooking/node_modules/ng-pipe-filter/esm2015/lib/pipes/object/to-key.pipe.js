/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Pipe } from '@angular/core';
import { is_object } from '../../functions/is-object.func';
/**
 * @param Object input {key1:arg1, key2:arg2, key3:arg3....}
 * @param Array output [{key1:arg1}, {key2:arg2}, {key3:arg3}]
 * Usage: <span *ngFor="let k of obj | to_key">{{k}}: {{obj[k]}}</span>
 */
export class ToKeyPipe {
    /**
     * @param {?} input
     * @return {?}
     */
    transform(input) {
        if (!is_object(input)) {
            return input;
        }
        /** @type {?} */
        const keys = [];
        for (const key in input) {
            if (input.hasOwnProperty(key)) {
                keys.push(key);
            }
        }
        return keys;
    }
}
ToKeyPipe.decorators = [
    { type: Pipe, args: [{ name: 'to_key' },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG8ta2V5LnBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9uZy1waXBlLWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9waXBlcy9vYmplY3QvdG8ta2V5LnBpcGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxJQUFJLEVBQWtCLE1BQU0sZUFBZSxDQUFDO0FBQ3JELE9BQU8sRUFBQyxTQUFTLEVBQUMsTUFBTSxnQ0FBZ0MsQ0FBQzs7Ozs7O0FBUXpELE1BQU0sT0FBTyxTQUFTOzs7OztJQUNsQixTQUFTLENBQUMsS0FBSztRQUNYLElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUU7WUFDbkIsT0FBTyxLQUFLLENBQUM7U0FDaEI7O2NBQ0ssSUFBSSxHQUFHLEVBQUU7UUFDZixLQUFLLE1BQU0sR0FBRyxJQUFJLEtBQUssRUFBRTtZQUNyQixJQUFJLEtBQUssQ0FBQyxjQUFjLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQzNCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7YUFDbEI7U0FDSjtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7OztZQWJKLElBQUksU0FBQyxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQaXBlLCBQaXBlVHJhbnNmb3JtICB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQge2lzX29iamVjdH0gZnJvbSAnLi4vLi4vZnVuY3Rpb25zL2lzLW9iamVjdC5mdW5jJztcclxuXHJcbi8qKlxyXG4qIEBwYXJhbSBPYmplY3QgaW5wdXQge2tleTE6YXJnMSwga2V5MjphcmcyLCBrZXkzOmFyZzMuLi4ufVxyXG4qIEBwYXJhbSBBcnJheSBvdXRwdXQgW3trZXkxOmFyZzF9LCB7a2V5MjphcmcyfSwge2tleTM6YXJnM31dXHJcbiogVXNhZ2U6IDxzcGFuICpuZ0Zvcj1cImxldCBrIG9mIG9iaiB8IHRvX2tleVwiPnt7a319OiB7e29ialtrXX19PC9zcGFuPlxyXG4qL1xyXG5AUGlwZSh7IG5hbWU6ICd0b19rZXknIH0pXHJcbmV4cG9ydCBjbGFzcyBUb0tleVBpcGUgaW1wbGVtZW50cyBQaXBlVHJhbnNmb3JtIHtcclxuICAgIHRyYW5zZm9ybShpbnB1dCk6IGFueSB7XHJcbiAgICAgICAgaWYgKCFpc19vYmplY3QoaW5wdXQpKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBpbnB1dDtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3Qga2V5cyA9IFtdO1xyXG4gICAgICAgIGZvciAoY29uc3Qga2V5IGluIGlucHV0KSB7XHJcbiAgICAgICAgICAgIGlmIChpbnB1dC5oYXNPd25Qcm9wZXJ0eShrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICBrZXlzLnB1c2goa2V5KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4ga2V5cztcclxuICAgIH1cclxufVxyXG4iXX0=