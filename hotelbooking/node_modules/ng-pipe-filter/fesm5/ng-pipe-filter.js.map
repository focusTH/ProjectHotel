{"version":3,"file":"ng-pipe-filter.js","sources":["ng://ng-pipe-filter/lib/functions/is-object.func.ts","ng://ng-pipe-filter/lib/functions/is-string.func.ts","ng://ng-pipe-filter/lib/functions/is-undefined.func.ts","ng://ng-pipe-filter/lib/functions/only-number.func.ts","ng://ng-pipe-filter/lib/pipes/bool/only-number.pipe.ts","ng://ng-pipe-filter/lib/pipes/bool-index.ts","ng://ng-pipe-filter/lib/pipes/math/range.pipe.ts","ng://ng-pipe-filter/lib/pipes/math-index.ts","ng://ng-pipe-filter/lib/pipes/object/to-array.pipe.ts","ng://ng-pipe-filter/lib/pipes/object/to-key-val.pipe.ts","ng://ng-pipe-filter/lib/pipes/object/to-key.pipe.ts","ng://ng-pipe-filter/lib/pipes/object-index.ts","ng://ng-pipe-filter/lib/pipes/string/comma-add.pipe.ts","ng://ng-pipe-filter/lib/pipes/string/comma-remove.pipe.ts","ng://ng-pipe-filter/lib/pipes/string/nl2br.pipe.ts","ng://ng-pipe-filter/lib/pipes/string/strip-tags.pipe.ts","ng://ng-pipe-filter/lib/pipes/string-index.ts","ng://ng-pipe-filter/lib/pipe-filter.module.ts"],"sourcesContent":["export function is_object (value: any): boolean {\r\n  return typeof value === 'object';\r\n}\r\n","export function is_string (value: any): value is string {\r\n  return typeof value === 'string';\r\n}\r\n","export function is_undefined (value: any): value is undefined {\r\n  return typeof value === 'undefined';\r\n}\r\n","export function only_number (value: any): value is boolean {\r\n  return  /^\\d+$/.test(value);\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {is_undefined} from '../../functions/is-undefined.func';\r\nimport {only_number} from '../../functions/only-number.func';\r\n@Pipe({\r\n  name: 'only_number'\r\n})\r\nexport class OnlyNumberPipe implements PipeTransform {\r\n    transform(input: string): boolean {\r\n        if (is_undefined(input)) {\r\n            return false;\r\n        }\r\n        return only_number(input);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { OnlyNumberPipe } from './bool/only-number.pipe';\r\n\r\nexport * from './bool/only-number.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    OnlyNumberPipe\r\n  ],\r\n  exports: [\r\n    OnlyNumberPipe\r\n  ]\r\n})\r\nexport class BooleanPipesModule {\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n* @param Object input {arg1, arg2, arg3....}\r\n* @param Array output [arg1, arg2, arg3]\r\n*/\r\n@Pipe({ name: 'range' })\r\nexport class RangePipe implements PipeTransform {\r\n    transform(input, min: number, max: number): any {\r\n        for (let i = min; i <= max; i++) {\r\n            input.push(i);\r\n        }\r\n        return input;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RangePipe } from './math/range.pipe';\r\nexport * from './math/range.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    RangePipe\r\n  ],\r\n  exports: [\r\n    RangePipe\r\n  ]\r\n})\r\nexport class MathPipesModule {\r\n}\r\n","import { Pipe, PipeTransform  } from '@angular/core';\r\nimport {is_object} from '../../functions/is-object.func';\r\n\r\n/**\r\n* @param Object input {arg1, arg2, arg3....}\r\n* @param Array output [arg1, arg2, arg3]\r\n*/\r\n@Pipe({ name: 'to_array' })\r\nexport class ToArrayPipe implements PipeTransform {\r\n    transform (input: any): any {\r\n\r\n        if (!is_object(input)) {\r\n            return input;\r\n        }\r\n    return Object.keys(input).map((value) => input[value]);\r\n  }\r\n}\r\n","import { Pipe, PipeTransform  } from '@angular/core';\r\nimport {is_object} from '../../functions/is-object.func';\r\n\r\n/**\r\n* @param Object input {key1:arg1, key2:arg2, key3:arg3....}\r\n* @param Array output [{k:key1, v:arg1}, {k:key2, v:arg2}, {k:key3, v:arg3}]\r\n* Usage: <span  *ngFor='let friendType of friendTypes | objtoarray'>{{friendType.k}} / {{ friendType.v }}</span>\r\n*/\r\n@Pipe({ name: 'to_key_val' })\r\nexport class ToKeyValPipe implements PipeTransform {\r\n\r\n    transform(input: any): any {\r\n        if (!is_object(input)) {\r\n            return input;\r\n        }\r\n\r\n        let myobj: any;\r\n        const arr = Object.keys(input).map(function (key) {\r\n            if (typeof input[key] === 'object') {\r\n                myobj = {k: '', v: {}};\r\n                myobj.k = key;\r\n                myobj.v = input[key];\r\n            } else {\r\n                myobj.k = key;\r\n                myobj.v = input[key];\r\n            }\r\n            return myobj;\r\n        });\r\n\r\n        return\tarr;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform  } from '@angular/core';\r\nimport {is_object} from '../../functions/is-object.func';\r\n\r\n/**\r\n* @param Object input {key1:arg1, key2:arg2, key3:arg3....}\r\n* @param Array output [{key1:arg1}, {key2:arg2}, {key3:arg3}]\r\n* Usage: <span *ngFor=\"let k of obj | to_key\">{{k}}: {{obj[k]}}</span>\r\n*/\r\n@Pipe({ name: 'to_key' })\r\nexport class ToKeyPipe implements PipeTransform {\r\n    transform(input): any {\r\n        if (!is_object(input)) {\r\n            return input;\r\n        }\r\n        const keys = [];\r\n        for (const key in input) {\r\n            if (input.hasOwnProperty(key)) {\r\n                keys.push(key);\r\n            }\r\n        }\r\n        return keys;\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { ToArrayPipe } from './object/to-array.pipe';\r\nimport { ToKeyValPipe } from './object/to-key-val.pipe';\r\nimport { ToKeyPipe } from './object/to-key.pipe';\r\n\r\nexport * from './object/to-array.pipe';\r\nexport * from './object/to-key-val.pipe';\r\nexport * from './object/to-key.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ToArrayPipe,\r\n    ToKeyValPipe,\r\n    ToKeyPipe\r\n  ],\r\n  exports: [\r\n    ToArrayPipe,\r\n    ToKeyValPipe,\r\n    ToKeyPipe\r\n  ]\r\n})\r\nexport class ObjectPipesModule {\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {is_undefined} from '../../functions/is-undefined.func';\r\n\r\n@Pipe({\r\n  name: 'comma_add'\r\n})\r\nexport class CommaAddPipe implements PipeTransform {\r\n\r\n    transform(input: string): any {\r\n        if (is_undefined(input)) {\r\n            return input;\r\n        }\r\n        return input.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {is_undefined} from '../../functions/is-undefined.func';\r\n\r\n@Pipe({\r\n  name: 'comma_remove'\r\n})\r\nexport class CommaRemovePipe implements PipeTransform {\r\n\r\n  transform(input: string): any {\r\n\r\n    if (is_undefined(input)) {\r\n        return input;\r\n    }\r\n    return input.toString().replace(/,/g , '');\r\n  }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\n\r\n@Pipe({name: 'nl2br'})\r\nexport class Nl2brPipe implements PipeTransform {\r\n    constructor(private sanitizer: DomSanitizer) {}\r\n    transform(str: string): any {\r\n        if (typeof(str) === 'undefined') { return; }\r\n        const replaced = str.replace(/(?:\\r\\n|\\r|\\n)/g, '<br />');\r\n        return this.sanitizer.bypassSecurityTrustHtml(replaced);\r\n    }\r\n}\r\n","import {Pipe, PipeTransform} from '@angular/core';\r\nimport {is_string} from '../../functions/is-string.func';\r\nimport {is_undefined} from '../../functions/is-undefined.func';\r\n\r\n@Pipe({\r\n  name: 'strip_tags'\r\n})\r\nexport class StripTagsPipe implements PipeTransform {\r\n\r\n    transform(input: string): any {\r\n        if (!is_string(input) || is_undefined(input)) {\r\n            return input;\r\n        }\r\n        return input.replace(/<\\S[^><]*>/g, '');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommaAddPipe } from './string/comma-add.pipe';\r\nimport { CommaRemovePipe } from './string/comma-remove.pipe';\r\nimport { Nl2brPipe } from './string/nl2br.pipe';\r\nimport { StripTagsPipe } from './string/strip-tags.pipe';\r\n\r\nexport * from './string/comma-add.pipe';\r\nexport * from './string/comma-remove.pipe';\r\nexport * from './string/nl2br.pipe';\r\nexport * from './string/strip-tags.pipe';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    CommaAddPipe,\r\n    CommaRemovePipe,\r\n    StripTagsPipe,\r\n    Nl2brPipe,\r\n  ],\r\n  exports: [\r\n    CommaAddPipe,\r\n    CommaRemovePipe,\r\n    StripTagsPipe,\r\n    Nl2brPipe,\r\n  ]\r\n})\r\nexport class StringPipesModule {\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport { BooleanPipesModule } from './pipes/bool-index';\r\nimport { MathPipesModule } from './pipes/math-index';\r\nimport { ObjectPipesModule } from './pipes/object-index';\r\nimport { StringPipesModule } from './pipes/string-index';\r\n@NgModule({\r\n  exports: [\r\n    BooleanPipesModule,\r\n    MathPipesModule,\r\n    ObjectPipesModule,\r\n    StringPipesModule\r\n  ]\r\n})\r\nexport class PipesFiltersModule {}\r\n"],"names":[],"mappings":"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"}