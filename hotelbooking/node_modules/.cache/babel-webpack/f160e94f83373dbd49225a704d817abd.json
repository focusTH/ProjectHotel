{"ast":null,"code":"import _asyncToGenerator from \"D:/\\u0E07\\u0E32\\u0E19/Project/ProjectHotel/hotelbooking/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { MessageService } from 'primeng/api';\nlet BookingComponent = class BookingComponent {\n  constructor(db, router, route) {\n    this.db = db;\n    this.router = router;\n    this.route = route; //  this.db.object('booking/0').set({id : 0,tel : '0905555555',dayNumb : 10 ,priceAll : 5000, nameU : 'Customer1', email : 'emailcus1@email.com', nameHo : 'Hotel1',telHo : '0361111111'  })\n\n    this.getStartedBooking();\n    this.getStartedHotel();\n  }\n\n  getStartedBooking() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      var booking;\n      yield _this.getBookingFromRealtimeDB().then(value => {\n        booking = value;\n        _this._bookingList = booking;\n      }); // console.log(this._bookingList);\n\n      _this._id = _this._bookingList[_this._bookingList.length - 1].id + 1;\n    })();\n  }\n\n  getBookingFromRealtimeDB() {\n    return new Promise((resolve, reject) => {\n      this.db.list('booking').valueChanges().subscribe(value => {\n        resolve(value);\n      });\n    });\n  } // items = this.cruservice.getItems();\n\n\n  getStartedHotel() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var room;\n      yield _this2.getHotelFromRealtimeDB().then(value => {\n        room = value;\n        _this2._roomList = room;\n      }); // console.log(this._room)\n\n      _this2.idTest = 1;\n      _this2.idHotel = _this2.idTest;\n      _this2._typeHo = _this2._roomList[_this2.idHotel].name;\n      _this2._zoneHo = _this2._roomList[_this2.idHotel].address;\n      _this2._telHo = _this2._roomList[_this2.idHotel].phone;\n      _this2._price = _this2._roomList[_this2.idHotel].price;\n    })();\n  }\n\n  getHotelFromRealtimeDB() {\n    return new Promise((resolve, reject) => {\n      this.db.list('room').valueChanges().subscribe(value => {\n        resolve(value);\n      });\n    });\n  }\n\n  calculator() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var diff = Date.parse(_this3._dayOut) - Date.parse(_this3._dayIn);\n      _this3._dayNumb = diff / 86400000;\n      _this3._priceAll = _this3._price * _this3._dayNumb;\n    })();\n  }\n\n  addBooking() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      var data = {\n        id: _this4._id,\n        nameU: _this4._uName,\n        email: _this4._email,\n        tel: _this4._tel,\n        dayIn: _this4._dayIn,\n        dayOut: _this4._dayOut,\n        dayNumb: _this4._dayNumb,\n        priceAll: _this4._priceAll,\n        nameHo: _this4._typeHo,\n        zoneHo: _this4._zoneHo,\n        telHo: _this4._telHo //Hotel Tel\n\n      };\n      yield _this4.db.object('booking/' + String(_this4._id)).set(data);\n      yield _this4.getStartedBooking();\n\n      _this4.router.navigateByUrl('payment');\n    })();\n  }\n\n  ngOnInit() {}\n\n};\nBookingComponent = __decorate([Component({\n  selector: 'app-booking',\n  templateUrl: './booking.component.html',\n  styleUrls: ['./booking.component.css'],\n  providers: [MessageService]\n})], BookingComponent);\nexport { BookingComponent };\n\nclass Booking {}\n\nclass Room {}","map":{"version":3,"sources":["D:/งาน/Project/ProjectHotel/hotelbooking/src/app/booking/booking.component.ts"],"names":["__decorate","Component","MessageService","BookingComponent","constructor","db","router","route","getStartedBooking","getStartedHotel","booking","getBookingFromRealtimeDB","then","value","_bookingList","_id","length","id","Promise","resolve","reject","list","valueChanges","subscribe","room","getHotelFromRealtimeDB","_roomList","idTest","idHotel","_typeHo","name","_zoneHo","address","_telHo","phone","_price","price","calculator","diff","Date","parse","_dayOut","_dayIn","_dayNumb","_priceAll","addBooking","data","nameU","_uName","email","_email","tel","_tel","dayIn","dayOut","dayNumb","priceAll","nameHo","zoneHo","telHo","object","String","set","navigateByUrl","ngOnInit","selector","templateUrl","styleUrls","providers","Booking","Room"],"mappings":";AAAA,SAASA,UAAT,QAA2B,OAA3B;AACA,SAASC,SAAT,QAA0B,eAA1B;AACA,SAASC,cAAT,QAA+B,aAA/B;AACA,IAAIC,gBAAgB,GAAG,MAAMA,gBAAN,CAAuB;AAC1CC,EAAAA,WAAW,CAACC,EAAD,EAAKC,MAAL,EAAaC,KAAb,EAAoB;AAC3B,SAAKF,EAAL,GAAUA,EAAV;AACA,SAAKC,MAAL,GAAcA,MAAd;AACA,SAAKC,KAAL,GAAaA,KAAb,CAH2B,CAI3B;;AACA,SAAKC,iBAAL;AACA,SAAKC,eAAL;AACH;;AACKD,EAAAA,iBAAiB,GAAG;AAAA;;AAAA;AACtB,UAAIE,OAAJ;AACA,YAAM,KAAI,CAACC,wBAAL,GAAgCC,IAAhC,CAAqCC,KAAK,IAAI;AAChDH,QAAAA,OAAO,GAAGG,KAAV;AACA,QAAA,KAAI,CAACC,YAAL,GAAoBJ,OAApB;AACH,OAHK,CAAN,CAFsB,CAMtB;;AACA,MAAA,KAAI,CAACK,GAAL,GAAW,KAAI,CAACD,YAAL,CAAkB,KAAI,CAACA,YAAL,CAAkBE,MAAlB,GAA2B,CAA7C,EAAgDC,EAAhD,GAAqD,CAAhE;AAPsB;AAQzB;;AACDN,EAAAA,wBAAwB,GAAG;AACvB,WAAO,IAAIO,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKf,EAAL,CAAQgB,IAAR,CAAa,SAAb,EAAwBC,YAAxB,GAAuCC,SAAvC,CAAiDV,KAAK,IAAI;AACtDM,QAAAA,OAAO,CAACN,KAAD,CAAP;AACH,OAFD;AAGH,KAJM,CAAP;AAKH,GAxByC,CAyB1C;;;AACMJ,EAAAA,eAAe,GAAG;AAAA;;AAAA;AACpB,UAAIe,IAAJ;AACA,YAAM,MAAI,CAACC,sBAAL,GAA8Bb,IAA9B,CAAmCC,KAAK,IAAI;AAC9CW,QAAAA,IAAI,GAAGX,KAAP;AACA,QAAA,MAAI,CAACa,SAAL,GAAiBF,IAAjB;AACH,OAHK,CAAN,CAFoB,CAMpB;;AACA,MAAA,MAAI,CAACG,MAAL,GAAc,CAAd;AACA,MAAA,MAAI,CAACC,OAAL,GAAe,MAAI,CAACD,MAApB;AACA,MAAA,MAAI,CAACE,OAAL,GAAe,MAAI,CAACH,SAAL,CAAe,MAAI,CAACE,OAApB,EAA6BE,IAA5C;AACA,MAAA,MAAI,CAACC,OAAL,GAAe,MAAI,CAACL,SAAL,CAAe,MAAI,CAACE,OAApB,EAA6BI,OAA5C;AACA,MAAA,MAAI,CAACC,MAAL,GAAc,MAAI,CAACP,SAAL,CAAe,MAAI,CAACE,OAApB,EAA6BM,KAA3C;AACA,MAAA,MAAI,CAACC,MAAL,GAAc,MAAI,CAACT,SAAL,CAAe,MAAI,CAACE,OAApB,EAA6BQ,KAA3C;AAZoB;AAavB;;AACDX,EAAAA,sBAAsB,GAAG;AACrB,WAAO,IAAIP,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,WAAKf,EAAL,CAAQgB,IAAR,CAAa,MAAb,EAAqBC,YAArB,GAAoCC,SAApC,CAA8CV,KAAK,IAAI;AACnDM,QAAAA,OAAO,CAACN,KAAD,CAAP;AACH,OAFD;AAGH,KAJM,CAAP;AAKH;;AACKwB,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,UAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAI,CAACC,OAAhB,IAA2BF,IAAI,CAACC,KAAL,CAAW,MAAI,CAACE,MAAhB,CAAtC;AACA,MAAA,MAAI,CAACC,QAAL,GAAiBL,IAAI,GAAG,QAAxB;AACA,MAAA,MAAI,CAACM,SAAL,GAAiB,MAAI,CAACT,MAAL,GAAc,MAAI,CAACQ,QAApC;AAHe;AAIlB;;AACKE,EAAAA,UAAU,GAAG;AAAA;;AAAA;AACf,UAAIC,IAAI,GAAG;AACP7B,QAAAA,EAAE,EAAE,MAAI,CAACF,GADF;AAEPgC,QAAAA,KAAK,EAAE,MAAI,CAACC,MAFL;AAGPC,QAAAA,KAAK,EAAE,MAAI,CAACC,MAHL;AAIPC,QAAAA,GAAG,EAAE,MAAI,CAACC,IAJH;AAKPC,QAAAA,KAAK,EAAE,MAAI,CAACX,MALL;AAMPY,QAAAA,MAAM,EAAE,MAAI,CAACb,OANN;AAOPc,QAAAA,OAAO,EAAE,MAAI,CAACZ,QAPP;AAQPa,QAAAA,QAAQ,EAAE,MAAI,CAACZ,SARR;AASPa,QAAAA,MAAM,EAAE,MAAI,CAAC5B,OATN;AAUP6B,QAAAA,MAAM,EAAE,MAAI,CAAC3B,OAVN;AAWP4B,QAAAA,KAAK,EAAE,MAAI,CAAC1B,MAXL,CAWY;;AAXZ,OAAX;AAaA,YAAM,MAAI,CAAC5B,EAAL,CAAQuD,MAAR,CAAe,aAAcC,MAAM,CAAC,MAAI,CAAC9C,GAAN,CAAnC,EAAgD+C,GAAhD,CAAoDhB,IAApD,CAAN;AACA,YAAM,MAAI,CAACtC,iBAAL,EAAN;;AACA,MAAA,MAAI,CAACF,MAAL,CAAYyD,aAAZ,CAA0B,SAA1B;AAhBe;AAiBlB;;AACDC,EAAAA,QAAQ,GAAG,CACV;;AAvEyC,CAA9C;AAyEA7D,gBAAgB,GAAGH,UAAU,CAAC,CAC1BC,SAAS,CAAC;AACNgE,EAAAA,QAAQ,EAAE,aADJ;AAENC,EAAAA,WAAW,EAAE,0BAFP;AAGNC,EAAAA,SAAS,EAAE,CAAC,yBAAD,CAHL;AAINC,EAAAA,SAAS,EAAE,CAAClE,cAAD;AAJL,CAAD,CADiB,CAAD,EAO1BC,gBAP0B,CAA7B;AAQA,SAASA,gBAAT;;AACA,MAAMkE,OAAN,CAAc;;AAEd,MAAMC,IAAN,CAAW","sourcesContent":["import { __decorate } from \"tslib\";\r\nimport { Component } from '@angular/core';\r\nimport { MessageService } from 'primeng/api';\r\nlet BookingComponent = class BookingComponent {\r\n    constructor(db, router, route) {\r\n        this.db = db;\r\n        this.router = router;\r\n        this.route = route;\r\n        //  this.db.object('booking/0').set({id : 0,tel : '0905555555',dayNumb : 10 ,priceAll : 5000, nameU : 'Customer1', email : 'emailcus1@email.com', nameHo : 'Hotel1',telHo : '0361111111'  })\r\n        this.getStartedBooking();\r\n        this.getStartedHotel();\r\n    }\r\n    async getStartedBooking() {\r\n        var booking;\r\n        await this.getBookingFromRealtimeDB().then(value => {\r\n            booking = value;\r\n            this._bookingList = booking;\r\n        });\r\n        // console.log(this._bookingList);\r\n        this._id = this._bookingList[this._bookingList.length - 1].id + 1;\r\n    }\r\n    getBookingFromRealtimeDB() {\r\n        return new Promise((resolve, reject) => {\r\n            this.db.list('booking').valueChanges().subscribe(value => {\r\n                resolve(value);\r\n            });\r\n        });\r\n    }\r\n    // items = this.cruservice.getItems();\r\n    async getStartedHotel() {\r\n        var room;\r\n        await this.getHotelFromRealtimeDB().then(value => {\r\n            room = value;\r\n            this._roomList = room;\r\n        });\r\n        // console.log(this._room)\r\n        this.idTest = 1;\r\n        this.idHotel = this.idTest;\r\n        this._typeHo = this._roomList[this.idHotel].name;\r\n        this._zoneHo = this._roomList[this.idHotel].address;\r\n        this._telHo = this._roomList[this.idHotel].phone;\r\n        this._price = this._roomList[this.idHotel].price;\r\n    }\r\n    getHotelFromRealtimeDB() {\r\n        return new Promise((resolve, reject) => {\r\n            this.db.list('room').valueChanges().subscribe(value => {\r\n                resolve(value);\r\n            });\r\n        });\r\n    }\r\n    async calculator() {\r\n        var diff = Date.parse(this._dayOut) - Date.parse(this._dayIn);\r\n        this._dayNumb = (diff / 86400000);\r\n        this._priceAll = this._price * this._dayNumb;\r\n    }\r\n    async addBooking() {\r\n        var data = {\r\n            id: this._id,\r\n            nameU: this._uName,\r\n            email: this._email,\r\n            tel: this._tel,\r\n            dayIn: this._dayIn,\r\n            dayOut: this._dayOut,\r\n            dayNumb: this._dayNumb,\r\n            priceAll: this._priceAll,\r\n            nameHo: this._typeHo,\r\n            zoneHo: this._zoneHo,\r\n            telHo: this._telHo //Hotel Tel\r\n        };\r\n        await this.db.object('booking/' + (String(this._id))).set(data);\r\n        await this.getStartedBooking();\r\n        this.router.navigateByUrl('payment');\r\n    }\r\n    ngOnInit() {\r\n    }\r\n};\r\nBookingComponent = __decorate([\r\n    Component({\r\n        selector: 'app-booking',\r\n        templateUrl: './booking.component.html',\r\n        styleUrls: ['./booking.component.css'],\r\n        providers: [MessageService]\r\n    })\r\n], BookingComponent);\r\nexport { BookingComponent };\r\nclass Booking {\r\n}\r\nclass Room {\r\n}\r\n"]},"metadata":{},"sourceType":"module"}